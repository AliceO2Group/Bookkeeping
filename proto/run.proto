syntax = 'proto3';

package o2.bookkeeping;

import 'common.proto';

// Services

service RunService {
  rpc Get(RunFetchRequest) returns (RunWithRelations);
  rpc Create(RunCreationRequest) returns (Run);
  rpc Update(RunUpdateRequest) returns (Run);
}

// High level messages

message RunFetchRequest {
  int32 runNumber = 1;
  // Specify the list of relations to fetch alongside the run
  // For example if this contains RUN_RELATIONS_LHC_FILL then the returned RunWithRelation will have a populated
  // lhcFill, else it will not be defined
  repeated RunRelations relations = 2;
}

message RunWithRelations {
  Run run = 1;
  optional LHCFill lhcFill = 2;
}

message RunCreationRequest {
  string environmentId = 1;
  int32 nDetectors = 2;
  int32 nEpns = 3;
  int32 nFlps = 4;
  int32 runNumber = 5;
  RunType runType = 6;
  bool dd_flp = 7;
  bool dcs = 8;
  bool epn = 9;
  string epnTopology = 10;
  optional string odcTopologyFullName = 11;
  repeated Detector detectors = 12;
  // Optional users that stopped or started the run (can also be undefined)
  optional User userO2Start = 13;
  optional User userO2Stop = 14;
}

message RunUpdateRequest {
  int32 runNumber = 1;
  optional int64 timeO2Start = 3;
  optional int64 timeO2End = 4;
  optional int64 timeTrgStart = 5;
  optional int64 timeTrgEnd = 6;
  optional string triggerValue = 7;
  optional string triggerRawConfiguration = 19;
  optional string pdpConfigOption = 8;
  optional string pdpTopologyDescriptionLibraryFile = 9;
  optional string tfbDdMode = 10;
  optional string lhcPeriod = 11;
  optional string odcTopologyFullName = 12;
  optional string pdpWorkflowParameters = 13;
  optional string pdpBeamType = 14;
  optional string readoutCfgUri = 15;
  repeated EorReason eorReasons = 16;
  // Optional users that stopped or started the run (can also be undefined)
  optional User userO2Start = 17;
  optional User userO2Stop = 18;
  // 19 is trigger raw configuration
}

// Enums

enum RunRelations {
  // IGNORED - Here to comply with proto specification
  RUN_RELATIONS_NULL = 0;
  // Include the LHC fill related to the run
  RUN_RELATIONS_LHC_FILL = 1;
}
