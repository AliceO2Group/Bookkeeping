name: Bookkeeping

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test_unit:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Unit Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach unit_db
      - name: Build Unit Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build unit_tests
      - name: Run Unit Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run unit_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  test_api:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start API Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach api_db
      - name: Build API Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build api_tests
      - name: Run API Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run api_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: api-test-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  lhc_periods_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start LHC Periods Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach lhc_periods_db
      - name: Build LHC Periods Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build lhc_periods_tests
      - name: Run LHC Periods Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run lhc_periods_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: lhc-periods-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  lhc_fills_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start LHC Fills Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach lhc_fills_db
      - name: Build LHC Fills Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build lhc_fills_tests
      - name: Run LHC Fills Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run lhc_fills_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: lhc-fills-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  logs_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Logs Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach logs_db
      - name: Build Logs Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build logs_tests
      - name: Run Logs Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run logs_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: logs-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  envs_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Envs Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach envs_db
      - name: Build Envs Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build envs_tests
      - name: Run Envs Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run envs_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: envs-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  runs_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Runs Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach runs_db
      - name: Build Runs Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build runs_tests
      - name: Run Runs Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run runs_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: runs-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  subsystems_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Subsystems Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach subsystems_db
      - name: Build Subsystems Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build subsystems_tests
      - name: Run Subsystems Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run subsystems_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: subsystems-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  tags_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Tags Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach tags_db
      - name: Build Tags Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build tags_tests
      - name: Run Tags Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run tags_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tags-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  flp_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start FLP Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach flp_db
      - name: Build FLP Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build flp_tests
      - name: Run FLP Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run flp_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: flp-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  home_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Home Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach home_db
      - name: Build Home Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build home_tests
      - name: Run Home Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run home_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: home-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  about_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start About Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach about_db
      - name: Build About Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build about_tests
      - name: Run About Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run about_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: about-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  eos_report_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start EOS Report Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach eos_report_db
      - name: Build EOS Report Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build eos_report_tests
      - name: Run EOS Report Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run eos_report_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: eos-report-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  data_passes_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Data Passes Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach data_passes_db
      - name: Build Data Passes Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build data_passes_tests
      - name: Run Data Passes Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run data_passes_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: data-passes-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  simulation_passes_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start Simulation Passes Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach simulation_passes_db
      - name: Build Simulation Passes Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build simulation_passes_tests
      - name: Run Simulation Passes Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run simulation_passes_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: simulation-passes-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  qc_flagtypes_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start QC Flagtypes Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach qc_flagtypes_db
      - name: Build QC Flagtypes Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build qc_flagtypes_tests
      - name: Run QC Flagtypes Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run qc_flagtypes_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: qc-flagtypes-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  qc_flags_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Create Coverage Directory
        run: mkdir -p ${{ github.workspace }}/coverage

      - name: Build and Start QC Flags Test Database
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          up --detach qc_flags_db
      - name: Build QC Flags Test Container
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          build qc_flags_tests
      - name: Run QC Flags Tests
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          run qc_flags_tests
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: qc-flags-coverage
          path: ${{ github.workspace }}/coverage
      - name: Clean Up
        run: |
          docker compose \
          -f docker-compose.test-parallel.yml \
          down

  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Installing dependencies
        run: npm ci
      - name: Running linter
        run: npm run lint

  coverage:
    needs: [test_unit, test_api,
            lhc_periods_tests,
            lhc_fills_tests,
            logs_tests, envs_tests,
            runs_tests,
            subsystems_tests,
            tags_tests,
            flp_tests,
            home_tests,
            about_tests,
            eos_report_tests,
            data_passes_tests,
            simulation_passes_tests,
            qc_flagtypes_tests,
            qc_flags_tests]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Install nyc
        run: npm install -g nyc
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v3
        with:
          path: coverage
      - name: Consolidate coverage files
        run: |
          mkdir -p coverage/consolidated
          find coverage/ -name '*.json' -exec mv {} coverage/consolidated/ \;
      - name: Merge Coverage Reports
        run: nyc merge coverage/consolidated/ coverage.json
      - name: Create Final Coverage Report
        run: nyc report --temp-directory ./coverage/consolidated --report-dir ./coverage --reporter=text-lcov > ./coverage/lcov.info
      - name: Upload Final Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
