digraph "org::openapitools::client::model::UpdateFlp"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{org::openapitools::\lclient::model::UpdateFlp\n||+ UpdateFlp()\l+ ~UpdateFlp()\l+ validate()\l+ toJson()\l+ fromJson()\l+ toMultipart()\l+ fromMultiPart()\l+ getNTimeframes()\l+ nTimeframesIsSet()\l+ unsetNTimeframes()\l+ setNTimeframes()\l+ getBytesProcessed()\l+ bytesProcessedIsSet()\l+ unsetBytesProcessed()\l+ setBytesProcessed()\l+ getBytesEquipmentReadOut()\l+ bytesEquipmentReadOutIsSet()\l+ unsetBytesEquipmentReadOut()\l+ setBytesEquipmentReadOut()\l+ getBytesRecordingReadOut()\l+ bytesRecordingReadOutIsSet()\l+ unsetBytesRecordingReadOut()\l+ setBytesRecordingReadOut()\l+ getBytesFairMQReadOut()\l+ bytesFairMQReadOutIsSet()\l+ unsetBytesFairMQReadOut()\l+ setBytesFairMQReadOut()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Describes an update to an flp"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{org::openapitools::\lclient::model::ModelBase\n||+ ModelBase()\l+ ~ModelBase()\l+ validate()\l+ toJson()\l+ fromJson()\l+ toMultipart()\l+ fromMultiPart()\l+ isSet()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toString()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ toJson()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromString()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ fromJson()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ toHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ fromHttpContent()\l+ toBase64()\l+ toBase64()\l+ fromBase64()\l}",height=0.2,width=0.4,color="grey75",URL="$classorg_1_1openapitools_1_1client_1_1model_1_1_model_base.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_IsSet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{bool\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_BytesEquipmentReadOut\n#m_BytesFairMQReadOut\n#m_BytesProcessed\n#m_BytesRecordingReadOut\n#m_NTimeframes" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{int64_t\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_BytesEquipmentReadOut\lIsSet\n#m_BytesFairMQReadOutIs\lSet\n#m_BytesProcessedIsSet\n#m_BytesRecordingReadOutIs\lSet\n#m_NTimeframesIsSet" ,arrowhead="odiamond",fontname="Helvetica"];
}
