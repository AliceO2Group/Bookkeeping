openapi: 3.0.0

info:
  title: ALICE Bookkeeping
  version: 0.0.0

servers:
  - url: '/api'

paths:
  /:
    get:
      operationId: getServerInformation
      summary: Get server information
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInformation'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /logs:
    get:
      operationId: listLogs
      summary: List all logs
      parameters:
        - $ref: '#/components/parameters/filterOrigin'
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/sortLogs'
      responses:
        '200':
          $ref: '#/components/responses/ArrayOfLogs'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'
      tags:
        - log
    post:
      operationId: createLog
      summary: Adds a new log
      responses:
        '201':
          $ref: '#/components/responses/Log'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/UnexpectedError'
      tags:
        - log
  /logs/{id}:
    parameters:
      - name: id
        in: path
        description: The id of the log to retrieve
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: getLogById
      summary: Gets a log by Id
      responses:
        '200':
          $ref: '#/components/responses/Log'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      tags:
        - log
  /status:
    get:
      operationId: getDeployInformation
      summary: Get deploy information
      responses:
        '200':
          description: Deploy information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployInformation'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        default:
          $ref: '#/components/responses/UnexpectedError'

components:
  parameters:
    filterOrigin:
      in: query
      name: filter[origin]
      description: Filter logs by their origin
      schema:
        type: string
        enum: [human, process]
    pageLimit:
      in: query
      name: page[limit]
      description: The numbers of items to return.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 100
    pageOffset:
      in: query
      name: page[offset]
      description: The number of items to skip before starting to collect the result set.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    sortLogs:
      in: query
      name: sort
      description: The sort order of the returned items.
      required: false
      schema:
        type: array
        items:
          type: string
        default:
          - -id
      style: form
      explode: false
  responses:
    ArrayOfLogs:
      description: Expected response to a valid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArrayOfLogsResponse'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    Log:
      description: Expected response to a valid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LogResponse'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  schemas:
    ApiInformation:
      description: API information
      type: object
      properties:
        name:
          description: Name of the API
          type: string
        version:
          description: Version of the API
          type: string
      required:
        - name
        - version
    ArrayOfLogs:
      description: A list of Log objects.
      type: array
      items:
        $ref: '#/components/schemas/Log'
    ArrayOfLogsResponse:
      description: Response containing multiple logs.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ArrayOfLogs'
      required:
        - data
    ArrayOfTags:
      description: A list of Tag objects.
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    DeployInformation:
      description: Deploy information
      type: object
      properties:
        age:
          description: The number of seconds that the server is online.
          type: number
        start:
          description: The unix timestamp of the moment that the the server went online.
          type: number
      required:
        - age
        - start
    Error:
      description: An Error object. 
      type: object
      properties:
        status:
          description: The HTTP status code applicable to this problem.
          type: string
        title:
          description: A short, human-readable summary of the problem.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
      required:
        - status
        - title
    Errors:
      description: A list of Error objects.
      type: object
      properties:
        errors:
          description: A list of Error objects.
          type: array
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
      required:
        - errors
    Log:
      description: Describes an intervention or an event that happened.
      type: object
      properties:
        entryId:
          description: Id of the log.
          type: integer
          format: int64
        title:
          description: Title of the log.
          type: string
        origin:
          description: Type of creator.
          type: string
          enum: [human, process]
        tags:
          $ref: '#/components/schemas/ArrayOfTags'
      required:
        - entryId
        - title
        - origin
        - tags
    LogResponse:
      description: Response containing a single log.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Log'
      required:
        - data
    Tag:
      description: A label attached to something for the purpose of identification.
      type: string
